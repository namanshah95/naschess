<div class="page-header">
<h2><%= @parent.name %>'s Profile</h2>
	<ul class="actions">
		<li><%= link_to "Back", parent_path(@parent), class: "btn btn-primary" %></li>
	</ul>
</div>

<% if !@last4.nil? %>
	Stored Card: **** **** **** <%= @last4 %>
<% end %>

<%= form_tag parent_store_card_path(@parent), method: :post, authenticity_token: :true, id: "payment-form" do %>
	  <div class="form-row">
	    <label for="card-element">
	      Credit or debit card
	    </label>
	    <div id="card-element">
	      <!-- a Stripe Element will be inserted here. -->
	    </div>

	    <!-- Used to display Element errors -->
	    <div id="card-errors" role="alert"></div>
	  </div>

	  <button>Store Payment Info</button>
	<% end %>

	<script type="text/javascript">
	// Create a Stripe client
	var stripe = Stripe('<%= Rails.configuration.stripe[:publishable_key] %>');

	// Create an instance of Elements
	var elements = stripe.elements();

	// Custom styling can be passed to options when creating an Element.
	// (Note that this demo uses a wider set of styles than the guide below.)
	var style = {
	  base: {
	    color: '#32325d',
	    lineHeight: '24px',
	    fontFamily: 'Helvetica Neue',
	    fontSmoothing: 'antialiased',
	    fontSize: '16px',
	    '::placeholder': {
	      color: '#aab7c4'
	    }
	  },
	  invalid: {
	    color: '#fa755a',
	    iconColor: '#fa755a'
	  }
	};

	// Create an instance of the card Element
	var card = elements.create('card', {style: style});

	// Add an instance of the card Element into the `card-element` <div>
	card.mount('#card-element');

	// Handle real-time validation errors from the card Element.
	card.addEventListener('change', function(event) {
	  const displayError = document.getElementById('card-errors');
	  if (event.error) {
	    displayError.textContent = event.error.message;
	  } else {
	    displayError.textContent = '';
	  }
	});

	var form = document.getElementById('payment-form');
	form.addEventListener('submit', function(event) {
	  	event.preventDefault();

	  	stripe.createSource(card).then(function(result) {
	    	if (result.error) {
	      		// Inform the user if there was an error
	      		var errorElement = document.getElementById('card-errors');
	      		errorElement.textContent = result.error.message;
	    	} else {
	      		// Send the source to your server
	      		stripeSourceHandler(result.source);
	    	}
	  	});

	  	function stripeSourceHandler(source) {
		  // Insert the source ID into the form so it gets submitted to the server
		  var form = document.getElementById('payment-form');
		  var hiddenInput = document.createElement('input');
		  hiddenInput.setAttribute('type', 'hidden');
		  hiddenInput.setAttribute('name', 'stripeSource');
		  hiddenInput.setAttribute('value', source.id);
		  form.appendChild(hiddenInput);

		  // Submit the form
		  form.submit();
		}
	});
	</script>